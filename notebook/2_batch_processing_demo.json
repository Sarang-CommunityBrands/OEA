{
	"name": "2_batch_processing_demo",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "spark3p1sm",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "8cee1759-5738-4f15-a215-32658b211039"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/79a9a1b8-17c9-4098-bbae-16c21b7edd2a/resourceGroups/gdat-oea-uat/providers/Microsoft.Synapse/workspaces/gdat-oea-uat-syn/bigDataPools/spark3p1sm",
				"name": "spark3p1sm",
				"type": "Spark",
				"endpoint": "https://gdat-oea-uat-syn.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark3p1sm",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# OEA Demo\r\n",
					"This notebook demonstrates the batch processing features of the OEA framework."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"outputs_hidden": false,
						"source_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"%run /OEA_py"
				],
				"execution_count": 3
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Incremental batches"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# reset this example (deletes data in stage1np/example, stage2np/example, and stage2p/example)\r\n",
					"oea.delete_data_source('example')"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Land the first batch of test data\r\n",
					"df1 = spark.createDataFrame([(1,'Joe','English','2021'), (2,'Helen','English','2021')], ['id', 'name', 'language', 'school_year'])\r\n",
					"oea.land('example', 'student', df1)\r\n",
					"# show what's landed in stage1\r\n",
					"df = oea.load_csv('stage1np/example/student')\r\n",
					"df.show()"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# ingest the first batch of test data into stage2\r\n",
					"example_schema = [['id', 'string', 'hash'], ['name', 'string', 'mask'], ['language', 'string', 'no-op'], ['school_year', 'string', 'partition-by']]\r\n",
					"oea.ingest_incremental_data('example', 'student', example_schema, 'school_year', 'id')\r\n",
					"\r\n",
					"# show what's in stage2\r\n",
					"df = oea.load_delta('stage2np/example/student_lookup')\r\n",
					"df.show()\r\n",
					"df = oea.load_delta('stage2p/example/student_pseudo')\r\n",
					"df.show()"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# land the second batch of test data\r\n",
					"df2 = spark.createDataFrame([(3,'Elisa','Spanish','2021'), (4,'Lily','English','2021')], ['id', 'name', 'language', 'school_year'])\r\n",
					"oea.land('example', 'student', df2)\r\n",
					"# show the comprehensive set of data landed in stage1\r\n",
					"df = oea.load_csv('stage1np/example/student')\r\n",
					"df.show()"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# ingest the second batch of test data into stage2\r\n",
					"oea.ingest_incremental_data('example', 'student', example_schema, 'school_year', 'id')\r\n",
					"\r\n",
					"# show what's in stage2\r\n",
					"df = oea.load_delta('stage2np/example/student_lookup')\r\n",
					"df.show()\r\n",
					"df = oea.load_delta('stage2p/example/student_pseudo')\r\n",
					"df.show()\r\n",
					"df.printSchema()"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Delta batches"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# reset this example (deletes data in stage1np/example, stage2np/example, and stage2p/example)\r\n",
					"oea.delete_data_source('delta_example')"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Land the first batch of test data\r\n",
					"df1 = spark.createDataFrame([(1,'Joseph','English','2021'), (2,'Helen','English','2021')], ['id', 'name', 'language', 'school_year'])\r\n",
					"oea.land('delta_example', 'student', df1)\r\n",
					"\r\n",
					"# show what's landed in stage1\r\n",
					"df = oea.load_csv('stage1np/delta_example/student')\r\n",
					"df.show()"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# ingest the first batch of test data into stage2\r\n",
					"example_schema = [['id', 'string', 'hash'], ['name', 'string', 'mask'], ['language', 'string', 'no-op'], ['school_year', 'string', 'partition-by']]\r\n",
					"oea.ingest_delta_data('delta_example', 'student', example_schema, 'school_year')\r\n",
					"\r\n",
					"# show what's in stage2\r\n",
					"df = oea.load_delta('stage2np/delta_example/student_lookup')\r\n",
					"df.show()\r\n",
					"df = oea.load_delta('stage2p/delta_example/student_pseudo')\r\n",
					"df.show()"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Land the second batch of test data\r\n",
					"df2 = spark.createDataFrame([(1,'Joseph','Spanish','2021'), (3,'Elisa','Spanish','2021')], ['id', 'name', 'language', 'school_year'])\r\n",
					"oea.land('delta_example', 'student', df2)\r\n",
					"\r\n",
					"# show what's landed in stage1\r\n",
					"df = oea.load_csv('stage1np/delta_example/student')\r\n",
					"df.show()"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# ingest the second batch of test data into stage2\r\n",
					"oea.ingest_delta_data('delta_example', 'student', example_schema, 'school_year')\r\n",
					"\r\n",
					"# show what's in stage2\r\n",
					"df = oea.load_delta('stage2np/delta_example/student_lookup')\r\n",
					"df.show()\r\n",
					"df = oea.load_delta('stage2p/delta_example/student_pseudo')\r\n",
					"df.show()\r\n",
					"df.printSchema()"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Snapshot batches"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# reset this example (deletes data in stage1np/example, stage2np/example, and stage2p/example)\r\n",
					"oea.delete_data_source('snapshot_example')"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# land data in stage1\r\n",
					"df1 = spark.createDataFrame([(1,'Joseph','English','2021'), (2,'Helen','English','2021')], ['id', 'name', 'language', 'school_year'])\r\n",
					"oea.land('snapshot_example', 'student', df1)\r\n",
					"\r\n",
					"# show what's landed in stage1\r\n",
					"df = oea.load_csv('stage1np/snapshot_example/student')\r\n",
					"df.show()"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# process data from stage1 into stage2\r\n",
					"example_schema = [['id', 'string', 'hash'], ['name', 'string', 'mask'], ['language', 'string', 'no-op'], ['school_year', 'string', 'partition-by']]\r\n",
					"oea.ingest_snapshot_data('snapshot_example', 'student', example_schema, 'school_year')\r\n",
					"\r\n",
					"# show what's in stage2\r\n",
					"df = oea.load_delta('stage2np/snapshot_example/student_lookup')\r\n",
					"df.show()\r\n",
					"df = oea.load_delta('stage2p/snapshot_example/student_pseudo')\r\n",
					"df.show()\r\n",
					"df.printSchema()"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# land the second test data batch in stage1\r\n",
					"df2 = spark.createDataFrame([(1,'Joseph','Spanish','2021'), (3,'Elisa','Spanish','2021')], ['id', 'name', 'language', 'school_year'])\r\n",
					"oea.land('snapshot_example', 'student', df2)\r\n",
					"\r\n",
					"# show what's landed in stage1\r\n",
					"df = oea.load_csv('stage1np/snapshot_example/student')\r\n",
					"df.show()"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# process data from stage1 into stage2\r\n",
					"example_schema = [['id', 'string', 'hash'], ['name', 'string', 'mask'], ['language', 'string', 'no-op'], ['school_year', 'string', 'partition-by']]\r\n",
					"oea.ingest_snapshot_data('snapshot_example', 'student', example_schema, 'school_year')\r\n",
					"\r\n",
					"# show what's in stage2\r\n",
					"df = oea.load_delta('stage2np/snapshot_example/student_lookup')\r\n",
					"df.show()\r\n",
					"df = oea.load_delta('stage2p/snapshot_example/student_pseudo')\r\n",
					"df.show()\r\n",
					"df.printSchema()"
				]
			}
		]
	}
}